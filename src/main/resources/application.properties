####    PostgreSQL      ###
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
server.port=${SEVER_PORT}

####    Redis setting   ###
redis.host=${REDIS_HOST}
redis.port=${REDIS_PORT}
redis.password=${REDIS_PASSWORD}
redis.short.lifetime=${REDIS_LIFETIME_SHORT_IN_MINUTES}
redis.long.lifetime=${REDIS_LIFETIME_LONG_IN_MINUTES}

spring.data.redis.timeout=60000

####    SQl setting     ###
#spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

logging.level.web=warn
spring.main.banner-mode=off

#CORS
frontend.endpoint=${FRONTEND_ENDPOINT}

#####       The MovieDB setting       ###
the_movieDB_api.authorization_key=${THE_MOVIE_DB_AUTHORIZATION_KEY}
the_movieDB_api.base_url=${THE_MOVIE_DB_BASE_URL}

#####       The api.kinocheck setting to get youtubeId for Movie       ###
kinocheck.api.baseUrl=https://api.kinocheck.de


spring.jpa.properties.hibernate.jdbc.batch_size=50
spring.jpa.properties.hibernate.order_inserts=true

# Amazon S3 config
amazonProperties.aws-url=${AWS_URL}
amazonProperties.accessKey=${AWS_ASSESS_KEY}
amazonProperties.secretKey=${AWS_SECRET_KEY}
amazonProperties.bucketName=${AWS_BUCKET_NAME}
amazonProperties.region=${AWS_REGION}

spring.rabbitmq.host=${RABBITMQ_HOST}
spring.rabbitmq.port=${RABBITMQ_PORT}
spring.rabbitmq.password=${RABBITMQ_USERNAME}
spring.rabbitmq.username=${RABBITMQ_PASSWORD}