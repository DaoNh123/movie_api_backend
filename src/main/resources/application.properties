####    PostgreSQL      ###
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
server.port=${SEVER_PORT}

####    Redis setting   ###
redis.host=${REDIS_HOST}
redis.port=${REDIS_PORT}
redis.password=${REDIS_PASSWORD}
redis.short.lifetime=${REDIS_LIFETIME_SHORT_IN_MINUTES}
redis.long.lifetime=${REDIS_LIFETIME_LONG_IN_MINUTES}

####    SQl setting     ###
#spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

logging.level.web=warn
spring.main.banner-mode=off

#Cros
frontend.endpoint=${FRONTEND_ENDPOINT}

#####       RapidApi Movie setting  (Removing soon)      ###
movie.api.find_by_name=${URL_TITLE_FIND}
#   the maximum time the client will wait for a connection to be established
connect_timeout=${CONNECT_TIMEOUT}
#   the maximum time the client will wait for a response from the server
response_timeout=${RESPONSE_TIMEOUT}
#   If no data is read within this time, the connection will be considered timed out
read_timeout=${READ_TIMEOUT}
#   If no data is written within this time, the connection will be considered timed out.
write_timeout=${WRITE_TIMEOUT}
base_url=${X_RAPID_BASE_URL}
x_rapid.api.key=${X_RAPID_API_KEY}
x_rapid.api.host=${X_RAPID_API_HOST}

#####       The MovieDB setting       ###
the_movieDB_api.authorization_key=${THE_MOVIE_DB_AUTHORIZATION_KEY}
the_movieDB_api.base_url=${THE_MOVIE_DB_BASE_URL}

spring.jpa.properties.hibernate.jdbc.batch_size=50
spring.jpa.properties.hibernate.order_inserts=true

# Amazon S3 config
amazonProperties.aws-url=${AWS_URL}
amazonProperties.accessKey=${AWS_ASSESS_KEY}
amazonProperties.secretKey=${AWS_SECRET_KEY}
amazonProperties.bucketName=${AWS_BUCKET_NAME}
amazonProperties.region=${AWS_REGION}
